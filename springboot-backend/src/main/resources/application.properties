#spring.datasource.url=jdbc:mysql://localhost:3306/employee_management_system?useSSL=false
#spring.datasource.username=root
#spring.datasource.password=root
#
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect


#spring:
#    datasource:
#    password: password
#    url: jdbc:postgresql://localhost:8080/SalesDB
#    username:

#Tutorial, check jdbc if correct
spring.datasource.url=jdbc:postgresql://localhost:5432/SalesDB  
spring.datasource.username=postgres
spring.datasource.password=password
spring.jpa.show-sql=true

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update), automatic create tables
spring.jpa.hibernate.ddl-none = update

# Hibernate will automatically create database tables so you only need to manually create the database and configure an application.properties file.
